from function_file import new_tag_add as new_tag, new_user_add as new_user, update_value as update_v
from function_file import new_registration_user as new_reg_user
from function_file import update_value_tag as update_tag
from function_file import get_members_in_tags as get_mit
from function_file import list_of_tags_f
import vk_api
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
import random
import sqlite3

TOKEN = "b79d7adce685daea38dba6fb4da1add9dd6d567ad8bf593948cdb2ef5a60a9f204502482f2fdf74d20f34"
group_id = 196670048

conn = sqlite3.connect('vkBot.db', check_same_thread=False)
cursor = conn.cursor()


# tags = [i[1] for i in cursor.execute("SELECT * FROM tags").fetchall()]
# [{'first_name': '–í–ª–∞–¥–∏—Å–ª–∞–≤', 'id': 358712250, 'last_name': '–û—á–Ω–µ–≤', 'can_access_closed': True, 'is_closed': False}]

def main():
    vk_session = vk_api.VkApi(token=TOKEN)
    vk = vk_session.get_api()
    print(1)
    for event in VkBotLongPoll(vk_session, group_id).listen():
        if event.type == VkBotEventType.MESSAGE_NEW:
            try:
                text = event.obj.message['text'].lower()
                print(text)
                user_id = event.obj.message['from_id']
                first_name = vk.users.get(user_ids=user_id)[0]['first_name']
                if vk.groups.isMember(group_id=group_id, user_id=user_id):
                    result = cursor.execute(
                        """SELECT step FROM members WHERE vk_id=""" + str(user_id)).fetchall()
                    # if text != "/startbot":
                    #     pass
                    # el
                    if len(result) == 0:
                        new_user(user_id)
                        update_v("step", 0, user_id)
                        new_reg_user(vk, user_id, first_name)
                    else:
                        step = result[0][0]
                        if text == "/startbot":
                            update_v("step", 1, user_id)
                            new_reg_user(vk, user_id, first_name, "/startbot")
                        elif step == 0:
                            if text == "—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è":
                                update_v("step", 3, user_id)
                                vk.messages.send(user_id=user_id,
                                                 message=f"ü§ñ {first_name}, —É–∫–∞–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—É–¥—É—Ç –ø–æ–¥–ª–µ–∂–∞—Ç—å –ø–µ—Ä–µ–¥–∞—á–µ –∏ —Ä–∞–∑–≥–ª–∞—à–µ–Ω–∏—é." + "\n\n" + "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û –ø–æ–ª–Ω–æ—Å—Ç—å—é :",
                                                 random_id=random.randint(0, 2 ** 64))
                            else:
                                update_v("step", 0, user_id)
                                new_reg_user(vk, user_id, first_name, "/startbot")
                        elif step == 3:
                            update_v("step", 4, user_id)
                            update_v("full_name", text, user_id)
                            vk.messages.send(user_id=user_id,
                                             message=f"ü§ñ {first_name}, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è." + "\n\n" + "–§–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –¥–¥.–º–º.–≥–≥–≥–≥ :",
                                             random_id=random.randint(0, 2 ** 64))
                        elif step == 4:
                            update_v("step", 5, user_id)
                            update_v("birthday", text, user_id)
                            vk.messages.send(user_id=user_id,
                                             message=f"ü§ñ {first_name}, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞." + "\n\n" + "–§–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö +79536061463 :",
                                             random_id=random.randint(0, 2 ** 64))
                        elif step == 5:
                            update_v("step", 6, user_id)
                            update_v("phone", text, user_id)
                            vk.messages.send(user_id=user_id,
                                             message=f"ü§ñ {first_name}, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã —Å–µ–π—á–∞—Å —É—á–∏—Ç–µ—Å—å." + "\n\n" + "–ï—Å–ª–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—ã –Ω–µ —É—á–∏—Ç–µ—Å—å, –Ω–∞–ø–∏—à–∏—Ç–µ '–Ω–µ —É—á—É—Å—å' :",
                                             random_id=random.randint(0, 2 ** 64))
                        elif step == 6:
                            update_v("step", 7, user_id)
                            update_v("edu_inst", text, user_id)
                            vk.messages.send(user_id=user_id,
                                             message=f"ü§ñ {first_name}, —Ç–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ." + "\n\n" + "–ù–∞–ø–∏—à–∏—Ç–µ –æ–± —É–º–µ–Ω–∏—è—Ö –∏ –Ω–∞–≤—ã–∫–∞—Ö, –∫–æ—Ç–æ—Ä—ã–º–∏ –≤—ã –±—ã –º–æ–≥–ª–∏ –ø–æ–º–æ—á—å –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–∏, –∏/–∏–ª–∏ —Ö–æ—Ç–µ–ª–∏ –±—ã –Ω–∞—É—á–∏—Ç—å—Å—è.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–º–µ—Å—Ç–∏—Ç–µ –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ :",
                                             random_id=random.randint(0, 2 ** 64))
                        elif step == 7:
                            update_v("step", 8, user_id)
                            update_v("about", text, user_id)
                            vk.messages.send(user_id=user_id,
                                             message=f"""ü§ñ {first_name}, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–≥–∏, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –≤–∞—à–µ–º—É —Ä–æ–¥—É –∑–∞–Ω—è—Ç–∏–π –∏/–∏–ª–∏ —Ö–æ—Ç–µ–ª–∏ –±—ã –Ω–∞—É—á–∏—Ç—å—Å—è.""",
                                             random_id=random.randint(0, 2 ** 64))

                            dict_of_tags = {i[0]: i[1] for i in cursor.execute("SELECT * FROM tags").fetchall()}
                            list_of_tags = ""
                            for i in dict_of_tags:
                                list_of_tags += str(i) + ": " + str(dict_of_tags[i]) + "\n"

                            vk.messages.send(user_id=user_id,
                                             message=list_of_tags,
                                             random_id=random.randint(0, 2 ** 64))

                            keyboard = vk_api.keyboard.VkKeyboard(one_time=True)
                            keyboard.add_button("–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–µ–≥")
                            keyboard = keyboard.get_keyboard()
                            vk.messages.send(user_id=user_id,
                                             message=f"ü§ñ –ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–≥–æ–≤ –≤ –ø–æ—Ä—è–¥–∫–µ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª." + "\n\n" + "–ï—Å–ª–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ —Ç–µ–≥–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–µ–≥' :",
                                             keyboard=keyboard,
                                             random_id=random.randint(0, 2 ** 64))
                        elif step == 8:
                            if text == "–¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–µ–≥":
                                update_v("step", 9, user_id)
                                vk.messages.send(user_id=user_id,
                                                 message=f"ü§ñ {first_name}, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–µ–≥–∞." + "\n\n" + "–ü–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å, —Ö–æ—Ä–æ—à–æ –ø–æ–¥—É–º–∞–π—Ç–µ –Ω–∞–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º",
                                                 random_id=random.randint(0, 2 ** 64))
                            else:
                                print(text)
                                tags_input = text.split()
                                print(tags_input)
                                update_v("tags", ' '.join(tags_input), user_id)

                                for elem in tags_input:
                                    update_tag(elem, user_id)
                                vk.messages.send(user_id=user_id,
                                                 message=f"ü§ñ –°–ø–∞—Å–∏–±–æ, {first_name}, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–∫–æ–Ω—á–µ–Ω–∞!" + "\n\n" + "–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏ : /startBot",
                                                 random_id=random.randint(0, 2 ** 64))
                        elif step == 9:
                            new_tag(text)
                            vk.messages.send(user_id=user_id,
                                             message="ü§ñ –ù–æ–≤—ã–π —Çe–≥ –¥–æ–±–∞–≤–ª–µ–Ω!",
                                             random_id=random.randint(0, 2 ** 64))
                            update_v("step", 8, user_id)
                            vk.messages.send(user_id=user_id,
                                             message=f"""ü§ñ {first_name}, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–≥–∏, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –≤–∞—à–µ–º—É —Ä–æ–¥—É –∑–∞–Ω—è—Ç–∏–π –∏/–∏–ª–∏ —Ö–æ—Ç–µ–ª–∏ –±—ã –Ω–∞—É—á–∏—Ç—å—Å—è.""",
                                             random_id=random.randint(0, 2 ** 64))
                            list_of_tags_f(vk, user_id)
                            keyboard = vk_api.keyboard.VkKeyboard(one_time=True)
                            keyboard.add_button("–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–µ–≥")
                            keyboard = keyboard.get_keyboard()
                            vk.messages.send(user_id=user_id,
                                             message=f"ü§ñ {first_name}, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–≥–æ–≤ –≤ –ø–æ—Ä—è–¥–∫–µ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª." + "\n\n" + "–ï—Å–ª–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ —Ç–µ–≥–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–µ–≥' :",
                                             keyboard=keyboard,
                                             random_id=random.randint(0, 2 ** 64))
                        elif step == 10:
                            if text == "–Ω–∞–∑–∞–¥":
                                update_v("step", 1, user_id)
                                new_reg_user(vk, user_id, first_name, "/startbot")
                            else:
                                update_v("step", 3, user_id)
                                vk.messages.send(user_id=user_id,
                                                 message=f"ü§ñ {first_name}, —É–∫–∞–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—É–¥—É—Ç –ø–æ–¥–ª–µ–∂–∞—Ç—å –ø–µ—Ä–µ–¥–∞—á–µ –∏ —Ä–∞–∑–≥–ª–∞—à–µ–Ω–∏—é." + "\n\n" + "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û –ø–æ–ª–Ω–æ—Å—Ç—å—é :",
                                                 random_id=random.randint(0, 2 ** 64))
                        elif step == 11:
                            list_of_tags = text.split()
                            data_output = ""
                            for tag in list_of_tags:
                                db_info = get_mit(tag)
                                data_output += f"{tag}: {db_info[1]}" + "\n"
                                list_index = str(db_info[2]).split()
                                for member in list_index:
                                    full_name = cursor.execute(f"SELECT full_name FROM members WHERE vk_id={member}").fetchall()[0][0]
                                    data_output += "\t" + str(list_index.index(member) + 1) + ": @id" + str(member) + f" ({full_name})" + "\n"
                                data_output += "\n"

                            vk.messages.send(user_id=user_id,
                                             message="–ü–æ–¥—Ö–æ–¥—è—â–∏–µ –≤–∞–º –ª—é–¥–∏:",
                                             random_id=random.randint(0, 2 ** 64))
                            if not data_output:
                                vk.messages.send(user_id=user_id,
                                                 message="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ª—é–¥–µ–π :(",
                                                 random_id=random.randint(0, 2 ** 64))
                            else:
                                vk.messages.send(user_id=user_id,
                                                 message=data_output,
                                                 random_id=random.randint(0, 2 ** 64))
                            list_of_tags_f(vk, user_id)
                            vk.messages.send(user_id=user_id,
                                             message="–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–≥–æ–≤ –≤ –ø–æ—Ä—è–¥–∫–µ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª, –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ /startBot",
                                             random_id=random.randint(0, 2 ** 64))
                        elif step == 1:
                            print(901)
                            if text == "—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è":
                                print(90)
                                update_v("step", 10, user_id)
                                keyboard = vk_api.keyboard.VkKeyboard(one_time=True)
                                keyboard.add_button("–ù–∞–∑–∞–¥")
                                keyboard.add_button("–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æ")
                                keyboard = keyboard.get_keyboard()
                                result = cursor.execute(
                                    """SELECT * FROM members WHERE vk_id=""" + str(user_id)).fetchall()[0]

                                if not result[2]:
                                    data = "ü§ñ –í—ã –µ—â–µ –Ω–µ –∑–∞–ø–æ–ª–Ω–∏–ª–∏ –∞–Ω–∫–µ—Ç—É :("
                                else:
                                    data = f"–§–ò–û: {result[3]}" + "\n" + f"–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {result[5]}" + "\n" + f"–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {result[4]}" + "\n" + f"–£—á–µ–±–Ω–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ: {result[6]}" + "\n" + f"–û —Å–µ–±–µ: {result[7]}" + "\n" + f"–¢–µ–≥–∏: {result[8]}"

                                vk.messages.send(user_id=user_id,
                                                 message="ü§ñ –í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞:\n" + data,
                                                 keyboard=keyboard,
                                                 random_id=random.randint(0, 2 ** 64))
                            elif text == "–ø–æ–∏—Å–∫ –ª—é–¥–µ–π":
                                update_v("step", 11, user_id)
                                list_of_tags_f(vk, user_id)
                                vk.messages.send(user_id=user_id,
                                                 message="ü§ñ –ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–≥–æ–≤ –≤ –ø–æ—Ä—è–¥–∫–µ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.",
                                                 random_id=random.randint(0, 2 ** 64))
                            else:
                                vk.messages.send(user_id=user_id,
                                                 message="ü§ñ –í–≤–µ–¥–∏—Ç–µ /startBot –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º",
                                                 random_id=random.randint(0, 2 ** 64))
                else:
                    print("else")
            except Exception as e:
                vk.messages.send(user_id=user_id,
                                 message="ü§ñ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ù–∞–ø–∏—à–∏—Ç–µ /startBot",
                                 random_id=random.randint(0, 2 ** 64))
                print(e)




while True:
    try:
        if __name__ == '__main__':
            main()
    except Exception as E:
        print(E)
